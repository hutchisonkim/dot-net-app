<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <IsPackable>false</IsPackable>
    <!-- Keep assembly info generation consistent with repo settings -->
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <LangVersion>preview</LangVersion>
    <AssemblyName>GitHub.Runner.Docker.Tests</AssemblyName>
    <RootNamespace>GitHub.Runner.Docker.Tests</RootNamespace>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="18.0.0" />
    <PackageReference Include="xunit" Version="2.5.3" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.5.1" />
    <PackageReference Include="Moq" Version="4.20.72" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="8.0.0" />
      <PackageReference Include="Docker.DotNet" Version="3.125.2" />
        <PackageReference Include="coverlet.collector" Version="3.2.0" />
        <!-- Add coverlet.msbuild so we can explicitly instrument the RunnerTasks test assembly and product assemblies -->
        <PackageReference Include="coverlet.msbuild" Version="3.2.0" />
  </ItemGroup>

  <ItemGroup>
  <ProjectReference Include="..\..\src\GitHub.Runner.Docker\GitHub.Runner.Docker.csproj" />
  </ItemGroup>

  <!-- Configure Coverlet to include the test assembly and DotNetApp product assemblies -->
  <PropertyGroup>
    <!-- Do not collect by default in CI unless requested; we'll enable via commandline flag when running locally -->
    <CoverletOutputFormat>cobertura</CoverletOutputFormat>
  <IncludeAssemblies>GitHub.Runner.Docker.Tests;DotNetApp.*</IncludeAssemblies>
  </PropertyGroup>

</Project>
