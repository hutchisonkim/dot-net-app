name: Test and Publish Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

env:
  DOTNET_VERSION: 8.0.x

jobs:
  test-and-report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Echo start
        run: echo "Starting coverage workflow"

      - name: Run tests with coverage
        run: |
          dotnet test --collect:"XPlat Code Coverage" --results-directory ./TestResults
          mkdir -p ./coverage-report
          cat > ./coverage-report/index.html <<'HTML'
          <!doctype html>
          <html lang="en">
            <head>
              <meta charset="utf-8" />
              <meta name="viewport" content="width=device-width,initial-scale=1" />
              <title>Coverage Report (placeholder)</title>
              <style>body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial;margin:2rem}</style>
            </head>
            <body>
              <h1>Coverage Report (placeholder)</h1>
              <p>This is a temporary placeholder HTML. Coverage XML files were written to <code>./TestResults</code>.</p>
              <p>Replace this with a real report generator invocation when ready.</p>
            </body>
          </html>
          HTML

      - name: Upload coverage report as Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./coverage-report

  deploy:
    needs: test-and-report
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
