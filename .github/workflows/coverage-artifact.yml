name: Test and Publish Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

env:
  DOTNET_VERSION: 8.0.x

jobs:
  test-and-report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Run tests with coverage
        run: |
          dotnet test --collect:"XPlat Code Coverage" --results-directory ./TestResults

      - name: Generate enhanced HTML coverage report
        run: |
          xml=$(cat ./TestResults/**/coverage.cobertura.xml)

          line_rate=$(echo "$xml" | grep -oP 'line-rate="\K[0-9.]+' | head -n 1)
          branch_rate=$(echo "$xml" | grep -oP 'branch-rate="\K[0-9.]+' | head -n 1)
          lines_covered=$(echo "$xml" | grep -oP 'lines-covered="\K[0-9]+' | head -n 1)
          lines_valid=$(echo "$xml" | grep -oP 'lines-valid="\K[0-9]+' | head -n 1)
          class_count=$(echo "$xml" | grep -c "<class ")

          line_percent=$(awk "BEGIN {printf \"%.2f\", $line_rate * 100}")
          branch_percent=$(awk "BEGIN {printf \"%.2f\", $branch_rate * 100}")

          mkdir -p ./coverage-report
          cat > ./coverage-report/index.html <<HTML
          <!doctype html>
          <html lang="en">
          <head>
            <meta charset="utf-8" />
            <meta name="viewport" content="width=device-width,initial-scale=1" />
            <title>Coverage Report</title>
            <style>
              body { font-family: system-ui, Segoe UI, Roboto, Helvetica, Arial; margin: 2rem; color: #222; }
              h1 { margin-bottom: 0.5rem; }
              .metric { margin-bottom: 1.2rem; }
              .label { font-weight: bold; display: inline-block; width: 150px; }
              .bar { height: 18px; background: #ddd; border-radius: 9px; overflow: hidden; width: 300px; display: inline-block; vertical-align: middle; margin-left: 0.5rem; }
              .fill { height: 100%; background: #4caf50; }
              .small { color: #666; font-size: 0.9em; }
              hr { margin: 2rem 0; border: none; border-top: 1px solid #ccc; }
            </style>
          </head>
          <body>
            <h1>Coverage Report</h1>
            <div class="metric">
              <span class="label">Line coverage:</span>
              <span>${line_percent}%</span>
              <div class="bar"><div class="fill" style="width:${line_percent}%"></div></div>
            </div>
            <div class="metric">
              <span class="label">Branch coverage:</span>
              <span>${branch_percent}%</span>
              <div class="bar"><div class="fill" style="width:${branch_percent}%"></div></div>
            </div>
            <div class="metric">
              <span class="label">Lines covered:</span>
              <span>${lines_covered} / ${lines_valid}</span>
            </div>
            <div class="metric">
              <span class="label">Classes analyzed:</span>
              <span>${class_count}</span>
            </div>
            <hr />
            <p class="small">Generated automatically from <code>coverage.cobertura.xml</code> using native tooling.</p>
          </body>
          </html>
          HTML

      - name: Upload coverage report as Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./coverage-report

  deploy:
    needs: test-and-report
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
