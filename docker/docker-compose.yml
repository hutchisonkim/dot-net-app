services:

  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    volumes:
      - ../src/DotNetApp.Api:/src/DotNetApp.Api
    environment:
      - WORKDIR=/src/DotNetApp.Api
    ports:
      - "5000:8080"
    networks:
      - default-network

  client:
    build:
      context: ..
      dockerfile: docker/Dockerfile.client
    volumes:
      - ../src/DotNetApp.Client:/src/DotNetApp.Client
    ports:
      - "8080:80"
    depends_on:
      - api
    networks:
      - default-network
    environment:
      - FRONTEND_API_BASE=http://api:8080/

  example-client:
    build:
      context: ..
      dockerfile: docker/Dockerfile.exampleclient
    volumes:
      - ../examples/ExampleClient:/src/examples/ExampleClient
    ports:
      - "8081:80"
    depends_on:
      - api
    networks:
      - default-network
    # The example client uses relative /api calls which nginx forwards; no extra env needed

  unity-example-client:
    # Builds Unity WebGL (placeholder if project/scripts missing) and serves with caching
    build:
      context: ..
      dockerfile: docker/Dockerfile.unitywebgl
      args:
        UNITY_IMAGE: unityci/editor:6000.2.5f1-base-3
    # If you only want to serve a pre-built output, you can mount it instead of building:
    # volumes:
    #   - ../examples/UnityExampleClient/wwwroot:/usr/share/nginx/html:ro
    ports:
      - "8082:80"
    depends_on:
      - api
    networks:
      - default-network
    environment:
      - FRONTEND_API_BASE=http://api:8080/
    # Rebuild after changing WebGL output: docker compose build unity-example-client

  api-integration-tests:
    build:
      context: ..
      dockerfile: docker/Dockerfile.tests.api-integration
    depends_on:
      - api
    volumes:
      - ../src/DotNetApp.Api:/src/DotNetApp.Api
      - ../src/DotNetApp.Client:/src/DotNetApp.Client
      - ../tests/DotNetApp.Api.IntegrationTests:/src/DotNetApp.Api.IntegrationTests
      - nuget-packages:/root/.nuget/packages
    environment:
      - WORKDIR=/src/DotNetApp.Api.IntegrationTests
      - FRONTEND_API_BASE=http://api:8080/
      - NUGET_HTTP_TIMEOUT=200000
    networks:
      - default-network

  client-integration-tests:
    build:
      context: ..
      dockerfile: docker/Dockerfile.tests.client-integration
    depends_on:
      - client
    volumes:
      - ../src/DotNetApp.Client:/src/DotNetApp.Client
      - ../tests/DotNetApp.Client.IntegrationTests:/src/DotNetApp.Client.IntegrationTests
      - nuget-packages:/root/.nuget/packages
    environment:
      - WORKDIR=/src/DotNetApp.Client.IntegrationTests
      - FRONTEND_API_BASE=http://api:8080/
      - NUGET_HTTP_TIMEOUT=200000
    networks:
      - default-network

  e2e-tests:
    build:
      context: ..
      dockerfile: docker/Dockerfile.tests.e2e
    depends_on:
      - api
      - client
    environment:
      - WORKDIR=/src/DotNetApp.E2ETests
      - FRONTEND_API_BASE=http://api:8080/
      - FRONTEND_URL=http://client:80
      - NUGET_HTTP_TIMEOUT=200000
    networks:
      - default-network

networks:
  default-network:
    driver: bridge

volumes:
  nuget-packages:
    driver: local
